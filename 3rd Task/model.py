# -*- coding: utf-8 -*-
"""Car Price Prediction Using Linear Regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TOQjmA6DwjDf9GnUFK3WrMirBx94pW95
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import warnings
warnings.filterwarnings("ignore")

data = pd.read_csv('car data.csv')
data.replace({'Fuel_Type':{'Petrol':0,'Diesel':1,'CNG':2}},inplace=True)
data.replace({'Selling_type':{'Dealer':0,'Individual':1}},inplace=True)
data.replace({'Transmission':{'Manual':0,'Automatic':1}},inplace=True)
x = data.drop(['Car_Name','Selling_Price'],axis=1)
y = data['Selling_Price']

X_train, X_test, Y_train, Y_test = train_test_split(x, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, Y_train)
pred = model.predict(X_test)

mse = mean_squared_error(Y_test, pred)
print("Mean Squared Error: ", mse)

new_car = [[2022, 20000, 0, 1, 1, 0, 0]]  # Example new car data
predicted_price = model.predict(new_car)
print('Predicted Selling Price:', predicted_price[0])

plt.figure(figsize=(10, 6))
plt.scatter(Y_test, pred, alpha=0.7)
plt.plot([Y_test.min(), Y_test.max()], [Y_test.min(), Y_test.max()], 'r--')  # Diagonal line
plt.xlabel("Actual Selling Price")
plt.ylabel("Predicted Selling Price")
plt.title("Actual vs Predicted Selling Price")
plt.grid()
plt.show()